# Serverless configuration

service: "${file(../config.json):prefix}-backend"

provider:
  name: aws
  runtime: python3.9
  region: "us-east-2"
  iam:
    role: "arn:aws:iam::668805947503:role/sh-ws-demo-execrole"
  websocketsApiName: "${self:service}-${sls:stage}"
  websocketsApiRouteSelectionExpression: $request.body.action
  environment:
    STAGE: "${sls:stage}"
    PREFIX: "${file(../config.json):prefix}"

plugins:
  - serverless-python-requirements
  - serverless-offline

custom:
  pythonRequirements:
    dockerizePip: true
    noDeploy: []

functions:
  connectionManager:
    handler: handler.connect
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  defaultMessage:
    handler: handler.message
    events:
      - websocket:
          route: $default
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
